% tbpseudo.mf
% [= txpseudo.mf, changed by Walter Schmidt, see (CMBR)]
%
% (c) Copyright 1995, 1996, 1997 J"org Knappen
%
% This file is part of the EC Bright fonts version 1.0
%
% This file contains pseudoparameters which are not entered in the 
% parameter files, but are computed from the initial parameter set. 
% There are also ad hoc parameters needed only once, and scratch 
% parameters with different values at each occuerence (like |theta|).
%

version_check(1,0);  % |version_check| was introduced in dc1.3

% (CMBR)
% width of circles for copyright etc., ensures real circles!
numeric circ_w#;
circ_w#:=18.7u#;

% Diameters of dots

% (CMBR)
numeric idot_diam#,udot_diam#,pdot_diam#;
  pdot_diam#=if monospace: 5/4 fi\\ dot_size#; % punctuation dots

% |limit_dist| is used in |put_cross|
% (the value of |u| is changed by |mono_adjust|, hence the global setting)

vardef limit_dist=5/4u enddef;

% More parametrisations for accents from csaccent.mf (csfonts):

numeric uc_acc_height, uc_acc_height#,
        lc_acute_height, lc_acute_height#,
        lc_hachek_height, lc_hachek_height#,
        accent_u, accent_u#,
        accent_thin,
        uc_acc_shift, asc_acc_shift;
if unknown circ_weight: circ_weight:=1; fi

uc_acc_height# = cap_height#+asc_height#-hi.x_height#;
lc_acute_height# = asc_height#;
lc_hachek_height# = hi.x_height#+acc_height#;
accent_u# = u#;   % unexpanded dimension unit

vardef accent_thin = if thin_join > crisp: thin_join else: crisp+eps fi enddef;

vardef uc_acc_shift = cap_height - hi.x_height enddef;
vardef asc_acc_shift = asc_height - hi.x_height enddef;

% Height of floating accents for capitals (note, that TeX raises them 
% by |uc_acc_shift|)

numeric cap_accent_height, cap_accent_height#;
cap_accent_height# = acc_height# + hi.x_height#;

% (CMBR)
def pseudo_setup=
  idot_diam#:=stem'/hppp; % dots on i and j, must fit stem width!
  idot_diam:=stem'; 
  udot_diam:=min(stem', hround(.85dot_size)); % umlaut dots
  udot_diam#:=udot_diam/hppp;
  define_whole_blacker_pixels(pdot_diam);
  define_whole_vertical_pixels(uc_acc_height,lc_acute_height,
    lc_hachek_height);
  define_pixels(accent_u);
  define_whole_vertical_pixels(cap_accent_height);
enddef;
endinput;
