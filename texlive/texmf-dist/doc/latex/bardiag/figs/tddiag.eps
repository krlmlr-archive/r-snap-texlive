%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 111 488 284 705 
%%LanguageLevel: 1
%%Creator: CorelDRAW 9
%%Title: tddiag.eps
%%CreationDate: Thu May 08 11:31:38 2003
%%For: RRS
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW 9 Version 9.337
%Color profile:  Generic offset separations profile
%%BeginResource: procset wCorel9Dict 9.0 0
/wCorel9Dict 300 dict def wCorel9Dict begin
% Copyright (c)1992-1999 Corel Corporation
% All rights reserved.     v9.0 r0.5
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CurrentInkName_5 where{pop}{/CurrentInkName_5(Composite)def}
ifelse/$ink_5 where{pop}{/$ink_5 -1 def}ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0
def/$t 1 def/$n _ def/$o 0 def/$fil 0 def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def
/$T 1 def/$N _ def/$O 0 def/$PF false def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0
def/s1t 0 def/s1n _ def/$bkg false def/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op
false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm
matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/p{/$pm xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}
bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}ifelse}bd
/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp}bd
/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}bd
/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld/GetRgb
/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2 systemdict
/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def/SetHsb
systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get def
/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/setcustomcolor where{pop}{/setcustomcolor{exch aload pop SepMode_5 0 eq{pop
@tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll 5 rp 1
sub neg SetGry}ifelse}bd}ifelse/@scc_5{dup type/booleantype eq{setoverprint}{1
eq setoverprint}ifelse dup _ eq{pop setprocesscolor_5 pop}{findcmykcustomcolor
exch setcustomcolor}ifelse SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint
and not}ifelse}bd/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{
/ncolors xd/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop
pop exch pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd
/daqC xd pop pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}
ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub
{dup 3 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index
2 add get 255 div rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length 3 idiv getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4
mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add
get 255 div $dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop
$dat 3 1 roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}
image}ifelse}bd}ifelse/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5
/$ffpnt xd}bd/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/@sft{$tllx
$pxf add dup $tllx gt{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei
add}if/$ty xd}bd/@stb{pathbbox/$ury xd/$urx xd/$lly xd/$llx xd}bd/@ep{{cvx exec
}forall}bd/@tp{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei sub
$ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{/$in
false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0 $phei
rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3 index
sub Tl matrix currentmatrix/$ctm xd @ep pop pop pop pop}{pop pop}ifelse @rs}bd
/@th{@sft 0 1 $tly 1 sub{dup $psx mul $tx add{dup $llx gt{$pwid sub}{exit}
ifelse}loop exch $phei mul $ty exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1
roll add exch @tp pop}for pop pop}for}bd/@tv{@sft 0 1 $tlx 1 sub{dup $pwid mul
$tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}{exit}ifelse}loop 0 1
$tly 1 sub{$phei mul 3 copy sub @tp pop}for pop pop}for}bd/$fm 0 def/wfill{1
$fm eq{fill}{eofill}ifelse}bd/wclip{1 $fm eq{clip}{eoclip}ifelse}bd/@pf{@gs
$ctm setmatrix $pm concat @stb wclip @sv Bburx Bbury $pm itransform/$tury xd
/$turx xd Bbllx Bblly $pm itransform/$tlly xd/$tllx xd newpath $tllx $tlly m
$tllx $tury l $turx $tury l $turx $tlly l $tllx $tlly m @cp pathbbox @rs/$tury
xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx sub def/$hei $tury $tlly sub def
@gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{$t $c $m $y $k $n $o @scc_5{
SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei scale <00> 8 1 false[8 0 0 1 0
0]{}imagemask}{/$bkg true def}ifelse}if}ifelse @gr $wid 0 gt $hei 0 gt and{$pn
cvlit load aload pop/$pd xd 3 -1 roll sub/$phei xd exch sub/$pwid xd $wid $pwid
div ceiling 1 add/$tlx xd $hei $phei div ceiling 1 add/$tly xd $psx 0 eq{@tv}{
@th}ifelse}if @gr @np/$bkg false def}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{@pf}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$t $c $m $y $k $n $o @scc_5{wfill}
{@np}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp
F}bd/S{matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M
$Y $K $N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}
{@np}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}
bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true
def}{@gs $t $c $m $y $k $n $o @scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd
/$pyf xd/$pxf xd/$pn xd}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd
}bd/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/tcc{@cc}def/@i{@sm @gs @ii 6 index 1 ne
{/$frg true def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg
false def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd
/$lly xd/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi
string def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub
$ury $lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts
1 eq{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load
$bts 1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}
ifelse}ifelse}ifelse}bd systemdict/pdfmark known not{/pdfmark/cleartomark ld}
if
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix @@txt @gr @np stringwidth pop 3 -1 roll add exch m}
forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if $fil 1 eq
{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq{/@@txt/@Pf ld
@ftx}{$t $c $m $y $k $n $o @scc_5{show}{pop}ifelse}ifelse}ifelse}ifelse $sdf
{$dsf $dsa $dsp @ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF
$SCA $SCP @ss}if $T $C $M $Y $K $N $O @scc_5{{currentpoint 3 -1 roll(0)dup 3 -1
roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat stroke @gr @np
stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp
@ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup
@gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}
def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm
matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat
ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd
/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def
/_bithibyte 0 def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel9Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
112.45748 527.10945 153.66246 653.22425 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.50003 0.50003 0.00000 @w
/$fm 0 def
112.45748 653.22425 m
153.66246 653.22425 L
153.66246 527.10945 L
112.45748 527.10945 L
112.45748 653.22425 L
@c
S

@rax %Note: Object
153.66331 528.35811 194.86913 704.01203 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.50003 0.50003 0.00000 @w
/$fm 0 def
153.66331 654.47291 m
194.86913 704.01203 L
194.86913 577.89723 L
153.66331 528.35811 L
153.66331 654.47291 L
@c
S

@rax %Note: Object
112.45748 653.32743 194.87565 703.97178 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.50003 0.50003 0.00000 @w
/$fm 0 def
153.66983 703.97178 m
194.87565 703.97178 L
153.66331 653.32743 L
112.45748 653.32743 L
153.66983 703.97178 L
@c
S

@rax %Note: Object
112.18876 500.55165 112.18989 534.88205 @E
0 J 0 j [2 5 ] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
112.18932 534.88205 m
112.18932 500.55165 L
S

@rax %Note: Object
153.64318 500.86375 153.64431 535.19414 @E
0 J 0 j [2 5 ] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
153.64375 535.19414 m
153.64375 500.86375 L
S

@rax %Note: Object
195.04346 502.42422 195.04460 585.38721 @E
0 J 0 j [2 5 ] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
195.04403 585.38721 m
195.04403 502.42422 L
S

@rax %Note: Object
153.82063 527.31014 229.53685 527.31128 @E
0 J 0 j [2 5 ] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
153.82063 527.31071 m
229.53685 527.31071 L
S

@rax %Note: Object
195.66822 576.96009 229.99861 576.96123 @E
0 J 0 j [2 5 ] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
195.66822 576.96066 m
229.99861 576.96066 L
S

@rax %Note: Object
220.48554 527.38809 220.48668 576.70271 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.50003 0.50003 0.00000 @w
/$fm 0 def
220.48611 575.32195 m
220.48611 528.76885 L
S
@j
0.00 0.00 0.00 1.00 K
0.00 0.00 0.00 1.00 k
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.00800 1.00800 0 @w
223.06450 572.12646 m
220.48611 576.10403 L
217.90573 572.12646 L
S
@J
@j
0.00 0.00 0.00 1.00 K
0.00 0.00 0.00 1.00 k
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.00800 1.00800 0 @w
223.06450 531.96435 m
220.48611 527.98677 L
217.90573 531.96435 L
S
@J

@rax %Note: Object
155.57046 511.16060 194.58425 511.16173 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.50003 0.50003 0.00000 @w
/$fm 0 def
156.95121 511.16117 m
193.20350 511.16117 L
S
@j
0.00 0.00 0.00 1.00 K
0.00 0.00 0.00 1.00 k
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.00800 1.00800 0 @w
160.14671 513.73956 m
156.16913 511.16117 L
160.14671 508.58079 L
S
@J
@j
0.00 0.00 0.00 1.00 K
0.00 0.00 0.00 1.00 k
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.00800 1.00800 0 @w
190.00800 513.73956 m
193.98557 511.16117 L
190.00800 508.58079 L
S
@J

@rax %Note: Object
113.74980 511.16060 152.44951 511.16173 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.50003 0.50003 0.00000 @w
/$fm 0 def
115.13055 511.16117 m
151.06876 511.16117 L
S
@j
0.00 0.00 0.00 1.00 K
0.00 0.00 0.00 1.00 k
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.00800 1.00800 0 @w
118.32605 513.73956 m
114.34847 511.16117 L
118.32605 508.58079 L
S
@J
@j
0.00 0.00 0.00 1.00 K
0.00 0.00 0.00 1.00 k
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.00800 1.00800 0 @w
147.87326 513.73956 m
151.85083 511.16117 L
147.87326 508.58079 L
S
@J

@rax 117.49493 491.90542 146.34907 507.41036 @E
[0.00028346 0.00000000 0.00000000 0.00028346 117.49492484 494.93393465] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 49389.00000 z
%CHAR: 0 0 (\134) @t
2000 34292 m
13821 -675 L
11886 -675 L
74 34292 L
2000 34292 L
@c
F
%CHAR: 13722 0 (d) @t
30868 2486 m
29790 1358 28736 552 27707 58 c
26678 -428 25567 -675 24382 -675 c
21970 -675 19863 337 18060 2354 c
16266 4371 15360 6964 15360 10125 c
15360 13294 16356 16191 18356 18825 c
20348 21451 22908 22768 26045 22768 c
27987 22768 29601 22143 30868 20908 C
30868 24983 l
30868 27510 30811 29057 30687 29642 c
30564 30218 30374 30613 30119 30819 c
29864 31033 29543 31132 29156 31132 c
28736 31132 28185 31008 27493 30745 C
27181 31592 L
33766 34292 L
34844 34292 L
34844 8750 l
34844 6165 34910 4585 35025 4017 c
35149 3441 35338 3046 35610 2823 c
35873 2593 36186 2486 36531 2486 c
36968 2486 37552 2618 38268 2897 C
38540 2050 L
31979 -675 L
30868 -675 L
30868 2486 L
@c
30868 4173 m
30868 15558 l
30769 16644 30481 17648 30004 18546 c
29518 19443 28876 20126 28086 20579 c
27288 21040 26514 21270 25756 21270 c
24341 21270 23081 20636 21970 19369 c
20505 17689 19772 15253 19772 12034 c
19772 8783 20480 6297 21896 4568 c
23312 2840 24884 1976 26621 1976 c
28086 1976 29502 2708 30868 4173 C
@c
F
%CHAR: 38417 0 (b) @t
46015 18282 m
48155 21254 50460 22744 52937 22744 c
55201 22744 57177 21772 58864 19838 c
60552 17895 61399 15253 61399 11886 c
61399 7968 60099 4807 57489 2412 c
55259 354 52765 -675 50015 -675 c
48731 -675 47422 -445 46097 25 c
44772 494 43414 1194 42031 2124 C
42031 25007 l
42031 27518 41973 29057 41850 29642 c
41734 30218 41545 30613 41290 30819 c
41026 31033 40705 31132 40318 31132 c
39874 31132 39306 31008 38631 30745 C
38294 31592 L
44928 34292 L
46015 34292 L
46015 18282 L
@c
46015 16735 m
46015 3523 L
46830 2716 47677 2107 48558 1704 c
49431 1292 50328 1087 51250 1087 c
52707 1087 54073 1893 55333 3498 c
56592 5104 57226 7441 57226 10512 c
57226 13343 56592 15516 55333 17039 c
54073 18554 52641 19319 51028 19319 c
50180 19319 49324 19097 48476 18669 c
47834 18348 47011 17698 46015 16735 C
@c
F
%CHAR: 63112 0 (a) @t
77171 3186 m
74908 1432 73484 420 72899 148 c
72035 -255 71113 -461 70133 -461 c
68602 -461 67343 66 66355 1111 c
65367 2157 64874 3531 64874 5235 c
64874 6314 65112 7244 65598 8034 c
66256 9121 67401 10149 69030 11121 c
70660 12084 73377 13253 77171 14636 C
77171 15508 l
77171 17706 76826 19221 76126 20044 c
75426 20859 74406 21270 73072 21270 c
72060 21270 71253 20999 70660 20447 c
70051 19904 69747 19278 69747 18570 c
69796 17171 l
69796 16430 69607 15862 69228 15459 c
68849 15055 68355 14858 67746 14858 c
67145 14858 66660 15064 66281 15483 c
65902 15903 65713 16471 65713 17196 c
65713 18578 66421 19846 67837 21007 c
69253 22159 71236 22744 73796 22744 c
75756 22744 77361 22414 78620 21756 c
79567 21254 80266 20472 80719 19410 c
81007 18718 81147 17311 81147 15171 c
81147 7672 l
81147 5564 81188 4272 81271 3795 c
81353 3326 81485 3004 81666 2848 c
81855 2683 82069 2601 82308 2601 c
82563 2601 82794 2659 82983 2774 c
83320 2980 83971 3572 84934 4536 C
84934 3186 L
83139 774 81419 -436 79773 -436 c
78991 -436 78365 -165 77896 387 c
77427 930 77188 1869 77171 3186 C
@c
77171 4750 m
77171 13170 L
74743 12199 73179 11516 72471 11121 c
71195 10413 70290 9672 69747 8898 c
69195 8124 68923 7285 68923 6363 c
68923 5211 69269 4247 69961 3482 c
70652 2725 71451 2338 72348 2338 c
73574 2338 75179 3144 77171 4750 C
@c
F
%CHAR: 85032 0 (r) @t
93041 22744 m
93041 17772 L
94885 21089 96787 22744 98729 22744 c
99610 22744 100343 22472 100927 21937 c
101503 21394 101791 20768 101791 20068 c
101791 19435 101586 18908 101166 18471 c
100746 18035 100252 17821 99668 17821 c
99108 17821 98474 18101 97774 18653 c
97075 19204 96556 19484 96219 19484 c
95931 19484 95618 19328 95280 19007 c
94556 18348 93807 17261 93041 15747 C
93041 5161 l
93041 3943 93189 3013 93494 2387 c
93708 1951 94078 1589 94605 1301 c
95140 1012 95898 864 96894 864 C
96894 0 L
85584 0 L
85584 864 L
86711 864 87551 1045 88094 1399 c
88497 1655 88777 2066 88942 2626 c
89016 2906 89057 3679 89057 4972 c
89057 13533 l
89057 16101 89008 17632 88901 18126 c
88802 18611 88604 18974 88325 19196 c
88045 19418 87691 19533 87271 19533 c
86777 19533 86217 19410 85584 19171 C
85345 20044 L
92029 22744 L
93041 22744 L
@c
F
T
@rax 158.32517 488.40548 215.87074 507.41036 @E
[0.00028346 0.00000000 0.00000000 0.00028346 158.32515956 494.93393465] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 49389.00000 z
%CHAR: 0 0 (\134) @t
2000 34292 m
13821 -675 L
11886 -675 L
74 34292 L
2000 34292 L
@c
F
%CHAR: 13722 0 (d) @t
30868 2486 m
29790 1358 28736 552 27707 58 c
26678 -428 25567 -675 24382 -675 c
21970 -675 19863 337 18060 2354 c
16266 4371 15360 6964 15360 10125 c
15360 13294 16356 16191 18356 18825 c
20348 21451 22908 22768 26045 22768 c
27987 22768 29601 22143 30868 20908 C
30868 24983 l
30868 27510 30811 29057 30687 29642 c
30564 30218 30374 30613 30119 30819 c
29864 31033 29543 31132 29156 31132 c
28736 31132 28185 31008 27493 30745 C
27181 31592 L
33766 34292 L
34844 34292 L
34844 8750 l
34844 6165 34910 4585 35025 4017 c
35149 3441 35338 3046 35610 2823 c
35873 2593 36186 2486 36531 2486 c
36968 2486 37552 2618 38268 2897 C
38540 2050 L
31979 -675 L
30868 -675 L
30868 2486 L
@c
30868 4173 m
30868 15558 l
30769 16644 30481 17648 30004 18546 c
29518 19443 28876 20126 28086 20579 c
27288 21040 26514 21270 25756 21270 c
24341 21270 23081 20636 21970 19369 c
20505 17689 19772 15253 19772 12034 c
19772 8783 20480 6297 21896 4568 c
23312 2840 24884 1976 26621 1976 c
28086 1976 29502 2708 30868 4173 C
@c
F
%CHAR: 38417 0 (b) @t
46015 18282 m
48155 21254 50460 22744 52937 22744 c
55201 22744 57177 21772 58864 19838 c
60552 17895 61399 15253 61399 11886 c
61399 7968 60099 4807 57489 2412 c
55259 354 52765 -675 50015 -675 c
48731 -675 47422 -445 46097 25 c
44772 494 43414 1194 42031 2124 C
42031 25007 l
42031 27518 41973 29057 41850 29642 c
41734 30218 41545 30613 41290 30819 c
41026 31033 40705 31132 40318 31132 c
39874 31132 39306 31008 38631 30745 C
38294 31592 L
44928 34292 L
46015 34292 L
46015 18282 L
@c
46015 16735 m
46015 3523 L
46830 2716 47677 2107 48558 1704 c
49431 1292 50328 1087 51250 1087 c
52707 1087 54073 1893 55333 3498 c
56592 5104 57226 7441 57226 10512 c
57226 13343 56592 15516 55333 17039 c
54073 18554 52641 19319 51028 19319 c
50180 19319 49324 19097 48476 18669 c
47834 18348 47011 17698 46015 16735 C
@c
F
%CHAR: 63112 0 (a) @t
77171 3186 m
74908 1432 73484 420 72899 148 c
72035 -255 71113 -461 70133 -461 c
68602 -461 67343 66 66355 1111 c
65367 2157 64874 3531 64874 5235 c
64874 6314 65112 7244 65598 8034 c
66256 9121 67401 10149 69030 11121 c
70660 12084 73377 13253 77171 14636 C
77171 15508 l
77171 17706 76826 19221 76126 20044 c
75426 20859 74406 21270 73072 21270 c
72060 21270 71253 20999 70660 20447 c
70051 19904 69747 19278 69747 18570 c
69796 17171 l
69796 16430 69607 15862 69228 15459 c
68849 15055 68355 14858 67746 14858 c
67145 14858 66660 15064 66281 15483 c
65902 15903 65713 16471 65713 17196 c
65713 18578 66421 19846 67837 21007 c
69253 22159 71236 22744 73796 22744 c
75756 22744 77361 22414 78620 21756 c
79567 21254 80266 20472 80719 19410 c
81007 18718 81147 17311 81147 15171 c
81147 7672 l
81147 5564 81188 4272 81271 3795 c
81353 3326 81485 3004 81666 2848 c
81855 2683 82069 2601 82308 2601 c
82563 2601 82794 2659 82983 2774 c
83320 2980 83971 3572 84934 4536 C
84934 3186 L
83139 774 81419 -436 79773 -436 c
78991 -436 78365 -165 77896 387 c
77427 930 77188 1869 77171 3186 C
@c
77171 4750 m
77171 13170 L
74743 12199 73179 11516 72471 11121 c
71195 10413 70290 9672 69747 8898 c
69195 8124 68923 7285 68923 6363 c
68923 5211 69269 4247 69961 3482 c
70652 2725 71451 2338 72348 2338 c
73574 2338 75179 3144 77171 4750 C
@c
F
%CHAR: 85032 0 (r) @t
93041 22744 m
93041 17772 L
94885 21089 96787 22744 98729 22744 c
99610 22744 100343 22472 100927 21937 c
101503 21394 101791 20768 101791 20068 c
101791 19435 101586 18908 101166 18471 c
100746 18035 100252 17821 99668 17821 c
99108 17821 98474 18101 97774 18653 c
97075 19204 96556 19484 96219 19484 c
95931 19484 95618 19328 95280 19007 c
94556 18348 93807 17261 93041 15747 C
93041 5161 l
93041 3943 93189 3013 93494 2387 c
93708 1951 94078 1589 94605 1301 c
95140 1012 95898 864 96894 864 C
96894 0 L
85584 0 L
85584 864 L
86711 864 87551 1045 88094 1399 c
88497 1655 88777 2066 88942 2626 c
89016 2906 89057 3679 89057 4972 c
89057 13533 l
89057 16101 89008 17632 88901 18126 c
88802 18611 88604 18974 88325 19196 c
88045 19418 87691 19533 87271 19533 c
86777 19533 86217 19410 85584 19171 C
85345 20044 L
92029 22744 L
93041 22744 L
@c
F
%CHAR: 99503 -12347 (*) @t
111414 12833 m
111348 13936 111126 15039 110739 16134 c
110196 17706 109924 18793 109924 19385 c
109924 20225 110122 20859 110509 21295 c
110904 21731 111389 21945 111974 21945 c
112468 21945 112904 21731 113274 21295 c
113645 20859 113826 20242 113826 19435 c
113826 18710 113612 17706 113192 16414 c
112764 15113 112501 13920 112402 12833 C
113291 13393 114081 14076 114789 14883 c
115884 16150 116699 16941 117225 17245 c
117760 17550 118296 17698 118847 17698 c
119374 17698 119818 17517 120181 17155 c
120543 16801 120724 16364 120724 15871 c
120724 15270 120460 14743 119925 14274 c
119399 13813 118073 13344 115950 12874 c
114715 12603 113686 12290 112863 11936 C
113702 11500 114723 11170 115925 10948 c
117867 10594 119143 10150 119744 9623 c
120353 9088 120650 8512 120650 7886 c
120650 7400 120469 6989 120106 6635 c
119744 6281 119324 6100 118847 6100 c
118361 6100 117826 6273 117242 6610 c
116657 6948 115859 7705 114863 8874 c
114204 9664 113390 10405 112402 11096 C
112435 10174 112624 9178 112962 8100 c
113538 6207 113826 4914 113826 4223 c
113826 3581 113636 3038 113250 2593 c
112863 2149 112451 1926 112023 1926 c
111422 1926 110887 2165 110402 2626 c
110064 2964 109899 3507 109899 4248 c
109899 5013 110080 5943 110451 7030 c
110821 8117 111052 8866 111151 9269 c
111249 9680 111340 10290 111414 11096 C
110467 10462 109636 9771 108936 8997 c
107759 7680 106878 6841 106278 6487 c
105858 6231 105430 6100 104977 6100 c
104434 6100 103964 6289 103578 6660 c
103191 7030 103001 7433 103001 7886 c
103001 8289 103166 8709 103495 9154 c
103825 9598 104318 9960 104977 10248 c
105413 10446 106401 10701 107940 11022 c
108936 11228 109916 11533 110862 11936 C
109990 12372 108953 12710 107751 12948 c
105775 13368 104549 13747 104088 14084 c
103364 14611 103001 15261 103001 16011 c
103001 16447 103182 16842 103545 17204 c
103907 17566 104327 17747 104812 17747 c
105339 17747 105899 17583 106500 17245 c
107092 16908 107833 16225 108714 15204 c
109603 14183 110500 13393 111414 12833 C
@c
F
%CHAR: 126174 0 (\134) @t
128174 34292 m
139995 -675 L
138060 -675 L
126248 34292 L
128174 34292 L
@c
F
%CHAR: 139896 0 (t) @t
147856 29345 m
147856 22093 L
153017 22093 L
153017 20406 L
147856 20406 L
147856 6075 l
147856 4643 148062 3679 148473 3186 c
148877 2683 149403 2437 150045 2437 c
150580 2437 151091 2601 151593 2930 c
152087 3260 152474 3745 152754 4387 C
153692 4387 L
153124 2815 152334 1630 151305 831 c
150276 33 149214 -362 148119 -362 c
147378 -362 146654 -156 145946 255 c
145238 667 144720 1251 144382 2017 c
144045 2774 143872 3951 143872 5548 c
143872 20406 L
140382 20406 L
140382 21196 L
141262 21550 142168 22151 143090 22991 c
144012 23838 144843 24843 145559 25995 c
145930 26604 146448 27724 147107 29345 C
147856 29345 L
@c
F
%CHAR: 153618 0 (d) @t
170764 2486 m
169686 1358 168632 552 167603 58 c
166574 -428 165463 -675 164278 -675 c
161866 -675 159759 337 157956 2354 c
156162 4371 155256 6964 155256 10125 c
155256 13294 156252 16191 158252 18825 c
160244 21451 162804 22768 165941 22768 c
167883 22768 169497 22143 170764 20908 C
170764 24983 l
170764 27510 170707 29057 170583 29642 c
170460 30218 170270 30613 170015 30819 c
169760 31033 169439 31132 169052 31132 c
168632 31132 168081 31008 167389 30745 C
167077 31592 L
173662 34292 L
174740 34292 L
174740 8750 l
174740 6165 174806 4585 174921 4017 c
175045 3441 175234 3046 175506 2823 c
175769 2593 176082 2486 176427 2486 c
176864 2486 177448 2618 178164 2897 C
178436 2050 L
171875 -675 L
170764 -675 L
170764 2486 L
@c
170764 4173 m
170764 15558 l
170665 16644 170377 17648 169900 18546 c
169414 19443 168772 20126 167982 20579 c
167184 21040 166410 21270 165652 21270 c
164237 21270 162977 20636 161866 19369 c
160401 17689 159668 15253 159668 12034 c
159668 8783 160376 6297 161792 4568 c
163208 2840 164780 1976 166517 1976 c
167982 1976 169398 2708 170764 4173 C
@c
F
%CHAR: 178313 0 (x) @t
178963 22093 m
189360 22093 L
189360 21196 L
188701 21196 188240 21089 187969 20859 c
187705 20636 187573 20340 187573 19970 c
187573 19583 187853 18990 188421 18183 c
188594 17928 188858 17525 189212 16982 c
190784 14471 L
192586 16982 l
193747 18570 194323 19575 194323 19994 c
194323 20332 194192 20612 193920 20850 c
193640 21081 193204 21196 192586 21196 C
192586 22093 L
200069 22093 L
200069 21196 L
199279 21147 198595 20933 198019 20546 c
197229 20003 196151 18809 194784 16982 c
191772 12948 L
197270 5038 l
198620 3095 199583 1926 200159 1531 c
200744 1136 201485 914 202407 864 C
202407 0 L
191986 0 L
191986 864 L
192710 864 193270 1029 193673 1350 c
193978 1572 194134 1877 194134 2239 c
194134 2609 193615 3548 192586 5038 c
189360 9771 L
185812 5038 l
184717 3581 184174 2708 184174 2437 c
184174 2050 184355 1704 184717 1383 c
185079 1070 185623 897 186347 864 C
186347 0 L
179136 0 L
179136 864 L
179712 947 180214 1152 180651 1473 c
181260 1934 182289 3128 183738 5038 c
188372 11187 L
184174 17270 l
182980 19007 182067 20093 181408 20538 c
180758 20974 179943 21196 178963 21196 C
178963 22093 L
@c
F
T
@rax 226.19934 541.66535 283.74491 560.67024 @E
[0.00028346 0.00000000 0.00000000 0.00028346 226.19933031 548.19380672] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 49389.00000 z
%CHAR: 0 0 (\134) @t
2000 34292 m
13821 -675 L
11886 -675 L
74 34292 L
2000 34292 L
@c
F
%CHAR: 13722 0 (d) @t
30868 2486 m
29790 1358 28736 552 27707 58 c
26678 -428 25567 -675 24382 -675 c
21970 -675 19863 337 18060 2354 c
16266 4371 15360 6964 15360 10125 c
15360 13294 16356 16191 18356 18825 c
20348 21451 22908 22768 26045 22768 c
27987 22768 29601 22143 30868 20908 C
30868 24983 l
30868 27510 30811 29057 30687 29642 c
30564 30218 30374 30613 30119 30819 c
29864 31033 29543 31132 29156 31132 c
28736 31132 28185 31008 27493 30745 C
27181 31592 L
33766 34292 L
34844 34292 L
34844 8750 l
34844 6165 34910 4585 35025 4017 c
35149 3441 35338 3046 35610 2823 c
35873 2593 36186 2486 36531 2486 c
36968 2486 37552 2618 38268 2897 C
38540 2050 L
31979 -675 L
30868 -675 L
30868 2486 L
@c
30868 4173 m
30868 15558 l
30769 16644 30481 17648 30004 18546 c
29518 19443 28876 20126 28086 20579 c
27288 21040 26514 21270 25756 21270 c
24341 21270 23081 20636 21970 19369 c
20505 17689 19772 15253 19772 12034 c
19772 8783 20480 6297 21896 4568 c
23312 2840 24884 1976 26621 1976 c
28086 1976 29502 2708 30868 4173 C
@c
F
%CHAR: 38417 0 (b) @t
46015 18282 m
48155 21254 50460 22744 52937 22744 c
55201 22744 57177 21772 58864 19838 c
60552 17895 61399 15253 61399 11886 c
61399 7968 60099 4807 57489 2412 c
55259 354 52765 -675 50015 -675 c
48731 -675 47422 -445 46097 25 c
44772 494 43414 1194 42031 2124 C
42031 25007 l
42031 27518 41973 29057 41850 29642 c
41734 30218 41545 30613 41290 30819 c
41026 31033 40705 31132 40318 31132 c
39874 31132 39306 31008 38631 30745 C
38294 31592 L
44928 34292 L
46015 34292 L
46015 18282 L
@c
46015 16735 m
46015 3523 L
46830 2716 47677 2107 48558 1704 c
49431 1292 50328 1087 51250 1087 c
52707 1087 54073 1893 55333 3498 c
56592 5104 57226 7441 57226 10512 c
57226 13343 56592 15516 55333 17039 c
54073 18554 52641 19319 51028 19319 c
50180 19319 49324 19097 48476 18669 c
47834 18348 47011 17698 46015 16735 C
@c
F
%CHAR: 63112 0 (a) @t
77171 3186 m
74908 1432 73484 420 72899 148 c
72035 -255 71113 -461 70133 -461 c
68602 -461 67343 66 66355 1111 c
65367 2157 64874 3531 64874 5235 c
64874 6314 65112 7244 65598 8034 c
66256 9121 67401 10149 69030 11121 c
70660 12084 73377 13253 77171 14636 C
77171 15508 l
77171 17706 76826 19221 76126 20044 c
75426 20859 74406 21270 73072 21270 c
72060 21270 71253 20999 70660 20447 c
70051 19904 69747 19278 69747 18570 c
69796 17171 l
69796 16430 69607 15862 69228 15459 c
68849 15055 68355 14858 67746 14858 c
67145 14858 66660 15064 66281 15483 c
65902 15903 65713 16471 65713 17196 c
65713 18578 66421 19846 67837 21007 c
69253 22159 71236 22744 73796 22744 c
75756 22744 77361 22414 78620 21756 c
79567 21254 80266 20472 80719 19410 c
81007 18718 81147 17311 81147 15171 c
81147 7672 l
81147 5564 81188 4272 81271 3795 c
81353 3326 81485 3004 81666 2848 c
81855 2683 82069 2601 82308 2601 c
82563 2601 82794 2659 82983 2774 c
83320 2980 83971 3572 84934 4536 C
84934 3186 L
83139 774 81419 -436 79773 -436 c
78991 -436 78365 -165 77896 387 c
77427 930 77188 1869 77171 3186 C
@c
77171 4750 m
77171 13170 L
74743 12199 73179 11516 72471 11121 c
71195 10413 70290 9672 69747 8898 c
69195 8124 68923 7285 68923 6363 c
68923 5211 69269 4247 69961 3482 c
70652 2725 71451 2338 72348 2338 c
73574 2338 75179 3144 77171 4750 C
@c
F
%CHAR: 85032 0 (r) @t
93041 22744 m
93041 17772 L
94885 21089 96787 22744 98729 22744 c
99610 22744 100343 22472 100927 21937 c
101503 21394 101791 20768 101791 20068 c
101791 19435 101586 18908 101166 18471 c
100746 18035 100252 17821 99668 17821 c
99108 17821 98474 18101 97774 18653 c
97075 19204 96556 19484 96219 19484 c
95931 19484 95618 19328 95280 19007 c
94556 18348 93807 17261 93041 15747 C
93041 5161 l
93041 3943 93189 3013 93494 2387 c
93708 1951 94078 1589 94605 1301 c
95140 1012 95898 864 96894 864 C
96894 0 L
85584 0 L
85584 864 L
86711 864 87551 1045 88094 1399 c
88497 1655 88777 2066 88942 2626 c
89016 2906 89057 3679 89057 4972 c
89057 13533 l
89057 16101 89008 17632 88901 18126 c
88802 18611 88604 18974 88325 19196 c
88045 19418 87691 19533 87271 19533 c
86777 19533 86217 19410 85584 19171 C
85345 20044 L
92029 22744 L
93041 22744 L
@c
F
%CHAR: 99503 -12347 (*) @t
111414 12833 m
111348 13936 111126 15039 110739 16134 c
110196 17706 109924 18793 109924 19385 c
109924 20225 110122 20859 110509 21295 c
110904 21731 111389 21945 111974 21945 c
112468 21945 112904 21731 113274 21295 c
113645 20859 113826 20242 113826 19435 c
113826 18710 113612 17706 113192 16414 c
112764 15113 112501 13920 112402 12833 C
113291 13393 114081 14076 114789 14883 c
115884 16150 116699 16941 117225 17245 c
117760 17550 118296 17698 118847 17698 c
119374 17698 119818 17517 120181 17155 c
120543 16801 120724 16364 120724 15871 c
120724 15270 120460 14743 119925 14274 c
119399 13813 118073 13344 115950 12874 c
114715 12603 113686 12290 112863 11936 C
113702 11500 114723 11170 115925 10948 c
117867 10594 119143 10150 119744 9623 c
120353 9088 120650 8512 120650 7886 c
120650 7400 120469 6989 120106 6635 c
119744 6281 119324 6100 118847 6100 c
118361 6100 117826 6273 117242 6610 c
116657 6948 115859 7705 114863 8874 c
114204 9664 113390 10405 112402 11096 C
112435 10174 112624 9178 112962 8100 c
113538 6207 113826 4914 113826 4223 c
113826 3581 113636 3038 113250 2593 c
112863 2149 112451 1926 112023 1926 c
111422 1926 110887 2165 110402 2626 c
110064 2964 109899 3507 109899 4248 c
109899 5013 110080 5943 110451 7030 c
110821 8117 111052 8866 111151 9269 c
111249 9680 111340 10290 111414 11096 C
110467 10462 109636 9771 108936 8997 c
107759 7680 106878 6841 106278 6487 c
105858 6231 105430 6100 104977 6100 c
104434 6100 103964 6289 103578 6660 c
103191 7030 103001 7433 103001 7886 c
103001 8289 103166 8709 103495 9154 c
103825 9598 104318 9960 104977 10248 c
105413 10446 106401 10701 107940 11022 c
108936 11228 109916 11533 110862 11936 C
109990 12372 108953 12710 107751 12948 c
105775 13368 104549 13747 104088 14084 c
103364 14611 103001 15261 103001 16011 c
103001 16447 103182 16842 103545 17204 c
103907 17566 104327 17747 104812 17747 c
105339 17747 105899 17583 106500 17245 c
107092 16908 107833 16225 108714 15204 c
109603 14183 110500 13393 111414 12833 C
@c
F
%CHAR: 126174 0 (\134) @t
128174 34292 m
139995 -675 L
138060 -675 L
126248 34292 L
128174 34292 L
@c
F
%CHAR: 139896 0 (t) @t
147856 29345 m
147856 22093 L
153017 22093 L
153017 20406 L
147856 20406 L
147856 6075 l
147856 4643 148062 3679 148473 3186 c
148877 2683 149403 2437 150045 2437 c
150580 2437 151091 2601 151593 2930 c
152087 3260 152474 3745 152754 4387 C
153692 4387 L
153124 2815 152334 1630 151305 831 c
150276 33 149214 -362 148119 -362 c
147378 -362 146654 -156 145946 255 c
145238 667 144720 1251 144382 2017 c
144045 2774 143872 3951 143872 5548 c
143872 20406 L
140382 20406 L
140382 21196 L
141262 21550 142168 22151 143090 22991 c
144012 23838 144843 24843 145559 25995 c
145930 26604 146448 27724 147107 29345 C
147856 29345 L
@c
F
%CHAR: 153618 0 (d) @t
170764 2486 m
169686 1358 168632 552 167603 58 c
166574 -428 165463 -675 164278 -675 c
161866 -675 159759 337 157956 2354 c
156162 4371 155256 6964 155256 10125 c
155256 13294 156252 16191 158252 18825 c
160244 21451 162804 22768 165941 22768 c
167883 22768 169497 22143 170764 20908 C
170764 24983 l
170764 27510 170707 29057 170583 29642 c
170460 30218 170270 30613 170015 30819 c
169760 31033 169439 31132 169052 31132 c
168632 31132 168081 31008 167389 30745 C
167077 31592 L
173662 34292 L
174740 34292 L
174740 8750 l
174740 6165 174806 4585 174921 4017 c
175045 3441 175234 3046 175506 2823 c
175769 2593 176082 2486 176427 2486 c
176864 2486 177448 2618 178164 2897 C
178436 2050 L
171875 -675 L
170764 -675 L
170764 2486 L
@c
170764 4173 m
170764 15558 l
170665 16644 170377 17648 169900 18546 c
169414 19443 168772 20126 167982 20579 c
167184 21040 166410 21270 165652 21270 c
164237 21270 162977 20636 161866 19369 c
160401 17689 159668 15253 159668 12034 c
159668 8783 160376 6297 161792 4568 c
163208 2840 164780 1976 166517 1976 c
167982 1976 169398 2708 170764 4173 C
@c
F
%CHAR: 178313 0 (y) @t
178601 22093 m
188899 22093 L
188899 21196 L
188397 21196 l
187672 21196 187129 21040 186767 20727 c
186405 20414 186223 20027 186223 19558 c
186223 18932 186487 18060 187022 16957 c
192397 5811 L
197344 18011 l
197616 18677 197748 19328 197748 19970 c
197748 20258 197690 20472 197583 20620 c
197451 20793 197254 20933 196982 21040 c
196702 21147 196225 21196 195533 21196 C
195533 22093 L
202719 22093 L
202719 21196 L
202127 21130 201666 21007 201345 20809 c
201024 20620 200670 20258 200283 19723 c
200135 19500 199863 18883 199460 17871 c
190471 -4173 l
189598 -6314 188462 -7927 187055 -9022 c
185647 -10117 184297 -10660 182988 -10660 c
182042 -10660 181260 -10388 180651 -9837 c
180042 -9293 179737 -8668 179737 -7960 c
179737 -7285 179959 -6742 180396 -6330 c
180840 -5918 181449 -5713 182223 -5713 c
182750 -5713 183474 -5894 184388 -6248 c
185030 -6486 185433 -6610 185598 -6610 c
186075 -6610 186602 -6355 187178 -5861 c
187746 -5359 188323 -4396 188899 -2963 c
190471 864 L
182536 17533 l
182289 18027 181910 18653 181375 19385 c
180972 19953 180643 20332 180387 20521 c
180017 20776 179424 21007 178601 21196 C
178601 22093 L
@c
F
T
%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel9Dict 9.0 0
%%EOF
