`makedoc' + `niceverb' - an alternative documentation system for LaTeX
======================================================================
The `nicetext' bundle offers "minimal" markup syntax for restricted
kinds of text: There should not be much more characters typed than 
printed! -- mainly: quick documentation of (smaller) LaTeX packages
-- achieved by active characters and preprocessing similar to 
`docstrip' ("opposite direction" however, incl. some txt to TeX).

New with release 0.3:

* `substr.tex' should typeset LaTeX quality documentation from 
  next available (on your install) substry.sty's ASCII/UTF-8 input 
  (works with me) -- first application of `niceverb''s "auto mode" 
  and `makedoc.sty' to a third-party package!
  
* `makedoc' simplified: single 

      \MakeInputJobDoc[<in>][<out>]{<header>}{<parser>} 
      
  generates a documentation file from the package file and 
  typesets it immediately (kind of \DocInput equivalent)
  -- see `Using makedoc the simplest way' in `makedoc.pdf'
  
* `|...|' from `niceverb' typesets an inline frame box for setting-off 
  a command description, modifiable by hooks (e.g., \colorbox)
  
* `niceverb' syntax works in page headers, PDF bookmarks, and 
  `hyperref' labels and otherwise much better than before, 
  dis-/re-enableable featurewise as well as altogether
  
* documentation extended, lists of script commands 
  
* configurable txt to TeX functionality or other replacements like 
  ASCII-arrows to arrow commands or inserting \index entries
  (setting up expandable replacement chains slightly more comfortable)
  -- try with templates and dialogue
   
* `fifinddo' works with character codes > 127, improved setup

* `makedoc' requires the `moreverb' package.

______________________________________________________________________
CATALOGUE: These packages may be compared with:
* easylatex, txt2latex, txt2tex 
  (typographical and TeX input enhancement); 
* doc, gmdoc, lineno (awk in place of \DocInput); 
* substr, datatool, ted, xstring, stringstrings, makematch, ... 
  (parsing)