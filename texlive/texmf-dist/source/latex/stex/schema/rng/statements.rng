<?xml version="1.0" encoding="UTF-8"?>
<!--
  /=====================================================================\ 
  | Mathematical Statements for LaTeXML                                 |
  |=====================================================================|
  | Not Part of LaTeXML:                                                |
  |  Copyright (c) 2005 Michael Kohlhase                                |
  |  Released under the Gnu Public License (GPL)                        |
  |=====================================================================|
  | Michael Kohlhase <m.kohlhase@iu-bremen.de>                  #_#     |
  | http://dlmf.nist.gov/LaTeXML/                              (o o)    |
  \=========================================================ooo==U==ooo=/
-->
<grammar ns="http://dlmf.nist.gov/LaTeXML" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <define name="statement.model">
    <choice>
      <text/>
      <ref name="Flow.class"/>
    </choice>
  </define>
  <define name="example">
    <element name="example">
      <ref name="Common.attribs"/>
      <attribute name="for">
        <data type="string"/>
      </attribute>
      <optional>
        <ref name="metadata"/>
      </optional>
      <zeroOrMore>
        <ref name="statement.model"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="definition">
    <element name="definition">
      <ref name="Common.attribs"/>
      <attribute name="for">
        <data type="string"/>
      </attribute>
      <optional>
        <ref name="metadata"/>
      </optional>
      <zeroOrMore>
        <ref name="statement.model"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="definiens">
    <element name="definiens">
      <attribute name="name">
        <data type="string"/>
      </attribute>
      <zeroOrMore>
        <ref name="statement.model"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="termin">
    <element name="termin">
      <attribute name="cd">
        <data type="NCName"/>
      </attribute>
      <attribute name="name">
        <data type="NCName"/>
      </attribute>
      <zeroOrMore>
        <choice>
          <ref name="statement.model"/>
          <ref name="Math"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="notation">
    <element name="notation">
      <ref name="Common.attribs"/>
      <attribute name="for">
        <data type="string"/>
      </attribute>
      <zeroOrMore>
        <ref name="statement.model"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="notemph">
    <element name="notemph">
      <zeroOrMore>
        <choice>
          <ref name="statement.model"/>
          <ref name="Math"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="statement-group">
    <element name="statement-group">
      <ref name="Common.attribs"/>
      <optional>
        <ref name="metadata"/>
      </optional>
      <zeroOrMore>
        <choice>
          <ref name="omtext"/>
          <ref name="example"/>
          <ref name="definition"/>
          <ref name="symbol"/>
          <ref name="assertion"/>
          <ref name="notation"/>
          <ref name="itemize"/>
          <ref name="enumerate"/>
          <ref name="description"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="symbol">
    <element name="symbol">
      <attribute name="name">
        <data type="string"/>
      </attribute>
    </element>
  </define>
  <define name="assertion">
    <element name="assertion">
      <ref name="Common.attribs"/>
      <optional>
        <attribute name="type">
          <data type="string"/>
        </attribute>
      </optional>
      <optional>
        <ref name="metadata"/>
      </optional>
      <zeroOrMore>
        <ref name="statement.model"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="axiom">
    <element name="axiom">
      <ref name="Common.attribs"/>
      <zeroOrMore>
        <ref name="statement.model"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="proof.model">
    <choice>
      <ref name="omtext"/>
      <ref name="step"/>
      <ref name="cases"/>
    </choice>
  </define>
  <define name="proof">
    <element name="proof">
      <ref name="Common.attribs"/>
      <optional>
        <attribute name="for">
          <data type="string"/>
        </attribute>
      </optional>
      <optional>
        <ref name="metadata"/>
      </optional>
      <zeroOrMore>
        <ref name="proof.model"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="cases">
    <element name="cases">
      <zeroOrMore>
        <choice>
          <ref name="case"/>
          <ref name="omtext"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="case">
    <element name="case">
      <ref name="Common.attribs"/>
      <optional>
        <attribute name="for">
          <data type="string"/>
        </attribute>
      </optional>
      <zeroOrMore>
        <ref name="proof.model"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="step">
    <element name="step">
      <ref name="Common.attribs"/>
      <zeroOrMore>
        <choice>
          <ref name="statement.model"/>
          <ref name="method"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="method">
    <element name="method">
      <ref name="Common.attribs"/>
      <attribute name="xref">
        <data type="string"/>
      </attribute>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="Math"/>
          <ref name="proof"/>
          <ref name="premise"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="premise">
    <element name="premise">
      <ref name="Common.attribs"/>
      <attribute name="xref">
        <data type="string"/>
      </attribute>
    </element>
  </define>
  <define name="omtext">
    <element name="omtext">
      <ref name="Common.attribs"/>
      <optional>
        <attribute name="for">
          <data type="string"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="from">
          <data type="string"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="type">
          <data type="string"/>
        </attribute>
      </optional>
      <optional>
        <ref name="metadata"/>
      </optional>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="Flow.class"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="statements.Block.class" combine="choice">
    <choice>
      <ref name="example"/>
      <ref name="definition"/>
      <ref name="notation"/>
      <ref name="symbol"/>
      <ref name="assertion"/>
      <ref name="proof"/>
      <ref name="axiom"/>
      <ref name="omtext"/>
      <ref name="statement-group"/>
    </choice>
  </define>
  <define name="statements.Inline.class" combine="choice">
    <choice>
      <ref name="definiens"/>
      <ref name="notemph"/>
      <ref name="termin"/>
      <ref name="method"/>
    </choice>
  </define>
</grammar>
